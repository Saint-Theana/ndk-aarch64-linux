--- llvm_android/do_build.py	2021-11-03 05:33:42.958074724 +0800
+++ ndk-aarch64-linux/llvm_android/do_build.py	2021-11-03 05:34:23.248074709 +0800
@@ -53,6 +53,9 @@ def extract_profdata() -> Optional[Path]
     tar = paths.pgo_profdata_tar()
     if not tar:
         return None
+    profdata_file = paths.OUT_DIR / paths.pgo_profdata_filename()
+    if profdata_file.exists():
+        return profdata_file
     utils.check_call(['tar', '-jxC', str(paths.OUT_DIR), '-f', str(tar)])
     profdata_file = paths.OUT_DIR / paths.pgo_profdata_filename()
     if not profdata_file.exists():
@@ -122,7 +125,7 @@ def build_runtimes(build_lldb_server: bo
     builders.CompilerRTBuilder().build()
     # 32-bit host crts are not needed for Darwin
     if hosts.build_host().is_linux:
-        builders.CompilerRTHostI386Builder().build()
+        builders.CompilerRTHostAarch64Builder().build()
     builders.LibOMPBuilder().build()
     if build_lldb_server:
         builders.LldbServerBuilder().build()
@@ -204,7 +207,7 @@ def normalize_llvm_host_libs(install_dir
         else:
             return '1.0', '1'
 
-    libdir = os.path.join(install_dir, 'lib64')
+    libdir = os.path.join(install_dir, 'lib')
     for libname, libformat in libs.items():
         short_version, major = getVersions(libname)
 
@@ -398,7 +401,7 @@ def package_toolchain(toolchain_builder:
     }
 
     bin_dir = install_dir / 'bin'
-    lib_dir = install_dir / 'lib64'
+    lib_dir = install_dir / 'lib'
     strip_cmd = Builder.toolchain.strip
 
     for binary in bin_dir.iterdir():
@@ -417,7 +420,7 @@ def package_toolchain(toolchain_builder:
                 if host.is_darwin:
                     darwin_codesign(binary)
 
-    # FIXME: check that all libs under lib64/clang/<version>/ are created.
+    # FIXME: check that all libs under lib/clang/<version>/ are created.
     for necessary_bin_file in necessary_bin_files:
         if not (bin_dir / necessary_bin_file).is_file():
             raise RuntimeError(f'Did not find {necessary_bin_file} in {bin_dir}')
@@ -484,7 +487,7 @@ def package_toolchain(toolchain_builder:
                         name = "binaries",
                         srcs = glob([
                             "bin/*",
-                            "lib64/*",
+                            "lib/*",
                         ]),
                     )"""))
 
@@ -496,14 +499,14 @@ def package_toolchain(toolchain_builder:
                             'clang++.real\n'
                             'clang-tidy\n'
                             'clang-tidy.real\n'
-                            '../lib64/libc++.so.1\n'
+                            '../lib/libc++.so.1\n'
                             'lld\n'
                             'ld64.lld\n'
                             'ld.lld\n'
-                            f'../lib64/clang/{version.long_version()}/share\n'
-                            f'../lib64/clang/{version.long_version()}/lib/linux\n'
-                            f'../lib64/clang/{version.long_version()}/include\n'
-                            f'../lib64/libxml2.so.{builders.LibXml2Builder.lib_version}\n'
+                            f'../lib/clang/{version.long_version()}/share\n'
+                            f'../lib/clang/{version.long_version()}/lib/linux\n'
+                            f'../lib/clang/{version.long_version()}/include\n'
+                            f'../lib/libxml2.so.{builders.LibXml2Builder.lib_version}\n'
                            )
             inputs_file.write(dependencies)
 
